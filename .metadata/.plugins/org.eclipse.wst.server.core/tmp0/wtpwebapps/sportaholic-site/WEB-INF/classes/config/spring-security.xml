<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	http://www.springframework.org/schema/security
	http://www.springframework.org/schema/security/spring-security-3.2.xsd">

	<!-- enable use-expressions -->
	<http auto-config="true" use-expressions="true">
		<intercept-url pattern="/clients/edit-password**" access="isAuthenticated()" />
		<intercept-url pattern="/alterar-senha**" access="isAuthenticated()" />
		<intercept-url pattern="/*/*/edit**" access="isAuthenticated()" />
	    <intercept-url pattern="/clients/new**" access="hasRole('ROLE_ANONYMOUS')" />
	    <intercept-url pattern="/novo-cadastro**" access="hasRole('ROLE_ANONYMOUS')" />

	    
		<access-denied-handler error-page="/403" />
		<form-login 
		    login-page="/login" 
		    default-target-url="/?success"
			authentication-failure-url="/login?error" 
			username-parameter="username"
			password-parameter="password" />
		<logout logout-success-url="/?logout" />

	</http>

	<!-- Select users and user_roles from database -->
	<authentication-manager>
	  <authentication-provider>
	    <password-encoder hash="bcrypt" /> 
		<jdbc-user-service data-source-ref="dataSource"
		  users-by-username-query=
		    "select email as username, password, 1 as enabled from client where email = ? "
		  authorities-by-username-query=
		    "select email as username, 'USER' as role from client where email = ? " />
	  </authentication-provider>
	</authentication-manager>

</beans:beans>
